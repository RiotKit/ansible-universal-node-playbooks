
docker_dependent_services: ['project']

#
# Encryption role settings
#
# instead of overriding hooks override this to adjust hooks
enc_directories_to_map:
    - { dst: "/project", name: "project" }
    - { dst: "/root", name: "root" }
    - { dst: "/var/log", name: "var-log" }
enc_notify_systemd_service: "project"

# https://github.com/zwiazeksyndykalistowpolski/server-secure-storage
default_role_encryption:
    enc_file: /storage                # path, where all of the data will be stored
    enc_file_size: 17160M             # examples: 256M, 20G, 500G
    enc_mount_name: storage           # mount name, should be a-z, lower case, without special letters
    enc_mount_path: /mnt/storage      # mount path
    enc_file_filesystem: ext4         # any filesystem supported by mkfs (and supported by the operating system)
    enc_hidden_volume_size: "16900M"  # ~17 GB
    enc_filesystem_create_if_not_exists: yes
    hide_sensitive_output: no

    #enc_passphrase: "test123"
    #enc_hidden_volume_passphrase: "hidden123"

    # tcplay settings
    hashing_algorithm: whirlpool
    encryption_algorithm: AES-256-XTS

    hook_pre_mount: ""
    hook_post_mount: >
        set -x;

        mkdir -p /mnt/storage/docker/volumes /var/lib/docker;

        {% for directory in enc_directories_to_map %}
        BACKUP=false;

        if [[ -d "{{ directory.dst }}" ]]; then
            rm -rf "{{ directory.dst }}.2";
            mv "{{ directory.dst }}" "{{ directory.dst }}.2";
            BACKUP=true;
        fi;

        mkdir -p "{{ directory.dst }}";
        mount -o bind "/mnt/storage/{{ directory.name }}" "{{ directory.dst }}" || exit 1;

        if [[ "${BACKUP}" == "true" ]]; then
            mv "{{ directory.dst }}.2/*" "{{ directory.dst }}/";
            mv "{{ directory.dst }}.2/.*" "{{ directory.dst }}/" || true;
            rmdir "{{ directory.dst }}.2" || true;
        fi;
        {% endfor %}

        mount -o bind /mnt/storage/docker /var/lib/docker || exit 1;
        mount --bind /var/lib/docker/plugins /var/lib/docker/plugins || true;
        mount --make-private /var/lib/docker/plugins || true;

        {% if enc_notify_systemd_service %}
        if [[ -f /etc/systemd/system/{{ enc_notify_systemd_service }}.service ]]; then
            sudo systemctl restart docker;
            sleep 5;
            sudo systemctl restart project;
        fi;
        {% endif %}

    hook_pre_unmount: >
        {% if enc_notify_systemd_service %}
        if [[ -f /etc/systemd/system/{{ enc_notify_systemd_service }}.service ]]; then
            sudo systemctl disable docker;
            sudo systemctl disable project;

            sudo systemctl stop project;
            sudo systemctl stop docker;
        fi;
        {% endif %}

        umount /var/lib/docker/plugins || true;
        umount /var/lib/docker || true;

        {% for directory in enc_directories_to_map %}
        umount "{{ directory.dst }}" || true;
        {% endfor %}

    hook_post_unmount: ""

# https://github.com/zwiazeksyndykalistowpolski/server-multi-user
default_role_users:
    technical_entrypoint: "/project/make.sh"
    enable_technical_entrypoint: false

    # technical administrator used for automatic deployments
    technical_account: "tech.admin"
    #technical_password: 'xyz'        # mkpasswd --method=SHA-512, also important - single quotes are important
    technical_account_id: 1800
    technical_group: "technical"
    technical_group_id: 4055
    users:
        accounts: []


# https://github.com/zwiazeksyndykalistowpolski/server-basic-security
default_role_basic_security:
    ssh_idle_time: "36000"
    ssh_permit_root_login: no
    ssh_input_port: "{{ ssh_target_port }}"
    change_root_password: no
    root_password: ""
    configure_firewall: yes
    #firewall_interface: ens192  # important: adjust this to your needs, invalid value may cut off access to the machine
    firewall_whitelist_local_network_addresses: true
    firewall_allowed_outgoing_ports:
        - "22"
        - "{{ ssh_target_port }}"
        - "80"
        - "443"


# https://github.com/zwiazeksyndykalistowpolski/server-basic-software
default_role_basic_software:
    docker: yes
    docker_schedule_clean_up: yes
    # Enforce docker to be updated (WARNING: will turn off and turn on docker)
    enforce_docker_update: no


# https://github.com/riotkit-org/server-tweak
default_role_tune:
    # Be careful with setting this to "no", even security upgrades are able to break docker daemon. Its better to manually upgrade system.
    remove_unattended_upgrades: yes
    remove_qemu_guest_agent: yes
    tune_docker: yes
    adjust_swappiness: yes
    swappiness: 10


# https://github.com/riotkit-org/server-logs
default_role_logs:
    configure_logrotate: no
    configure_systemd: yes
    systemd_max_logs_disk_space: 100M
    systemd_max_file_sec: 1month
